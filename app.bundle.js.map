{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://todolist/./node_modules/dom-to-json/dist/lib/index.js","webpack://todolist/webpack/bootstrap","webpack://todolist/./src/display/sidebarController.js","webpack://todolist/./src/display/modals/confirmModal.js","webpack://todolist/./src/display/modals/taskModal.js","webpack://todolist/./src/display/modals/projectModal.js","webpack://todolist/./src/display/modalController.js","webpack://todolist/./src/display/taskDisplay.js","webpack://todolist/./src/display/taskGroup.js","webpack://todolist/./src/task/task.js","webpack://todolist/./src/project.js","webpack://todolist/./src/app.js","webpack://todolist/./src/display/displayController.js","webpack://todolist/./src/task/taskManager.js"],"sourcesContent":["/* eslint-disable no-undef */\n'use strict';\n\n// convert to json\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nconst toJSON = exports.toJSON = node => {\n    node = node || undefined;\n    let obj = {\n        nodeType: node.nodeType\n    };\n    if (node.tagName) {\n        obj.tagName = node.tagName.toLowerCase();\n    } else if (node.nodeName) {\n        obj.nodeName = node.nodeName;\n    }\n    if (node.nodeValue) {\n        obj.nodeValue = node.nodeValue;\n    }\n    let attrs = node.attributes;\n    let childNodes = node.childNodes;\n    let length;\n    let arr;\n    if (attrs) {\n        length = attrs.length;\n        arr = obj.attributes = new Array(length);\n        for (let i = 0; i < length; i++) {\n            const attr = attrs[i];\n            arr[i] = [attr.nodeName, attr.nodeValue];\n        }\n    }\n    if (childNodes) {\n        length = childNodes.length;\n        arr = obj.childNodes = new Array(length);\n        for (let i = 0; i < length; i++) {\n            arr[i] = toJSON(childNodes[i]);\n        }\n    }\n    return obj;\n};\n\n// consvert json to dom\nconst toDOM = exports.toDOM = obj => {\n    if (typeof obj == 'string') {\n        obj = JSON.parse(obj);\n    }\n    let node,\n        nodeType = obj.nodeType;\n    switch (nodeType) {\n        case 1:\n            //ELEMENT_NODE\n            node = document.createElement(obj.tagName);\n            let attributes = obj.attributes || [];\n            for (let i = 0, len = attributes.length; i < len; i++) {\n                const attr = attributes[i];\n                node.setAttribute(attr[0], attr[1]);\n            }\n            break;\n        case 3:\n            //TEXT_NODE\n            // eslint-disable-next-line no-undef\n            node = document.createTextNode(obj.nodeValue);\n            break;\n        case 8:\n            //COMMENT_NODE\n            node = document.createComment(obj.nodeValue);\n            break;\n        case 9:\n            //DOCUMENT_NODE\n            node = document.implementation.createDocument();\n            break;\n        case 10:\n            //DOCUMENT_TYPE_NODE\n            node = document.implementation.createDocumentType(obj.nodeName);\n            break;\n        case 11:\n            //DOCUMENT_FRAGMENT_NODE\n            node = document.createDocumentFragment();\n            break;\n        default:\n            return node;\n    }\n    if (nodeType == 1 || nodeType == 11) {\n        const childNodes = obj.childNodes || [];\n        for (let i = 0, len = childNodes.length; i < len; i++) {\n            node.appendChild(toDOM(childNodes[i]));\n        }\n    }\n    return node;\n};\n\n// convert htmlnode to string\nconst outerHTML = exports.outerHTML = node => {\n    return node.outerHTML || new XMLSerializer().serializeToString(node);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","class SidebarController {\n  #sidebarWrapper = document.querySelector('.sidebar-wrapper');\n  #sidebarBtn = document.querySelector('.sidebar-btn');\n  #projects = document.querySelector('.projects-list');\n  #options = Array.from(document.querySelectorAll('.option'));\n  #triggerResizeEvent = null;\n  #content;\n\n  constructor(content) {\n    this.#content = content;\n  }\n\n  get #windowSmall() {\n    return window.innerWidth < 1100;\n  }\n\n  get #sidebarClosed() {\n    return this.#sidebarWrapper.classList.contains('sidebar-closed');\n  }\n\n  get overlay() {\n    return document.querySelector('.sidebar-overlay');\n  }\n\n  #toggleSidebar(btnPress = false) {\n    this.#sidebarWrapper.classList.toggle('sidebar-closed');\n\n    if (btnPress && this.#sidebarClosed) {\n      this.#sidebarWrapper.classList.add('toggled-off');\n    } else {\n      this.#sidebarWrapper.classList.remove('toggled-off');\n    }\n  }\n\n  #toggleBtn() {\n    if (this.#sidebarClosed) {\n      this.#sidebarBtn.classList.add('standAlone');\n    } else {\n      this.#sidebarBtn.classList.remove('standAlone');\n    }\n  }\n\n  #toggleOverlay() {\n    if (this.overlay.classList.contains('show')) {\n      this.#sidebarWrapper.addEventListener(\n        'transitionend',\n        () => {\n          // There needs to be a check for the existence of the overlay in case the user stretches\n          // the screen and it is removed before transitionend, which would cause an error on\n          // accessing its classList\n          if (this.overlay) {\n            this.overlay.classList.remove('show');\n          }\n        },\n        { once: true }\n      );\n    } else {\n      this.overlay.classList.add('show');\n    }\n  }\n\n  #btnClickHandler() {\n    if (this.overlay) {\n      this.toggleSidebarWithOverlay();\n    } else {\n      this.toggleSidebarWithoutOverlay();\n    }\n  }\n\n  #createSidebarOverlay() {\n    const overlay = document.createElement('div');\n    overlay.classList.add('sidebar-overlay');\n    overlay.appendChild(this.#sidebarWrapper);\n    this.#content.insertBefore(overlay, this.#content.firstChild);\n\n    this.#addOverlayListener(overlay);\n  }\n\n  #removeSidebarOverlay() {\n    this.#content.removeChild(this.overlay);\n    this.#content.insertBefore(this.#sidebarWrapper, this.#content.firstChild);\n  }\n\n  #addOverlayListener(overlay) {\n    overlay.addEventListener(\n      'click',\n      (e) => {\n        if (\n          !this.#sidebarClosed &&\n          (!e.target.closest('.sidebar') || e.target.closest('.sidebar button'))\n        ) {\n          this.toggleSidebarWithOverlay();\n        }\n      },\n      true\n    );\n  }\n\n  #resizeToggle() {\n    const toggledOff = this.#sidebarWrapper.classList.contains('toggled-off');\n\n    if (this.#windowSmall && !this.#sidebarClosed) {\n      if (this.overlay) {\n        this.#toggleOverlay();\n      }\n      this.#sidebarWrapper.classList.add('sidebar-closed');\n      this.#toggleBtn();\n    } else if (!this.#windowSmall && !toggledOff && this.#sidebarClosed) {\n      // Create delay from the DOM manipulation so the CSS transitions are shown\n      setTimeout(() => {\n        this.#sidebarWrapper.classList.remove('sidebar-closed');\n        this.#toggleBtn();\n      }, 1);\n    }\n  }\n\n  #resizeHandler() {\n    if (!this.#windowSmall && this.overlay) {\n      this.#removeSidebarOverlay();\n    }\n\n    this.#resizeToggle();\n\n    // Only create the sidebar overlay when the user is DONE resizing the screen\n    clearTimeout(this.#triggerResizeEvent);\n    this.#triggerResizeEvent = setTimeout(() => {\n      if (this.#windowSmall && this.#sidebarClosed && !this.overlay) {\n        this.#createSidebarOverlay();\n      }\n    }, 200);\n  }\n\n  toggleSidebarWithoutOverlay() {\n    this.#toggleSidebar(true);\n    this.#toggleBtn();\n  }\n\n  toggleSidebarWithOverlay() {\n    this.#toggleOverlay();\n    this.#toggleSidebar();\n    this.#toggleBtn();\n  }\n\n  setUpListeners() {\n    this.#sidebarBtn.addEventListener('click', (e) => {\n      // Stops event from propagating to inner icon div\n      e.stopPropagation();\n      this.#btnClickHandler();\n    });\n\n    window.addEventListener('resize', () => {\n      this.#resizeHandler();\n    });\n\n    for (const option of this.#options) {\n      this.setUpOptionBtn(option);\n    }\n  }\n\n  setUpOptionBtn(option) {\n    option.addEventListener('click', () => {\n      if (!option.classList.contains('clicked')) {\n        const existing = this.#options.find((btn) =>\n          btn.classList.contains('clicked')\n        );\n        if (existing) {\n          existing.classList.remove('clicked');\n        }\n        option.classList.add('clicked');\n      }\n    });\n  }\n\n  initialize() {\n    this.#resizeHandler();\n    this.setUpListeners();\n  }\n\n  addProject(projectDisplay) {\n    this.#projects.appendChild(projectDisplay);\n    this.#options.push(projectDisplay);\n\n    this.setUpOptionBtn(projectDisplay);\n  }\n\n  removeProject(projectDisplay) {\n    this.#projects.removeChild(projectDisplay);\n\n    const index = this.#options.indexOf(projectDisplay);\n    this.#options.splice(index, 1);\n  }\n\n  updateProject(project, updatedProject) {\n    this.#projects.insertBefore(updatedProject.display, project.display);\n    this.#projects.removeChild(project.display);\n\n    this.setUpOptionBtn(updatedProject.display);\n\n    const index = this.#options.indexOf(project.display);\n    this.#options.splice(index, 1, updatedProject.display);\n  }\n}\n\nexport { SidebarController };\n","class ConfirmModal {\n  constructor(headerText, descText, confirmText, closeConfirmModal) {\n    const confirmOverlay = document.createElement('div');\n    confirmOverlay.classList.add('confirm-overlay');\n\n    const confirmModal = document.createElement('div');\n    confirmModal.classList.add('confirm-modal', 'modal');\n\n    const header = document.createElement('h1');\n    header.textContent = headerText;\n\n    const description = document.createElement('p');\n    description.textContent = descText;\n\n    const confirmButtons = document.createElement('div');\n    confirmButtons.classList.add('confirm-buttons');\n\n    const cancel = document.createElement('button');\n    cancel.type = 'button';\n    cancel.classList.add('cancel');\n    cancel.textContent = 'Cancel';\n    cancel.addEventListener('click', () => closeConfirmModal(confirmOverlay));\n\n    const confirm = document.createElement('button');\n    confirm.type = 'button';\n    confirm.classList.add('confirm');\n    confirm.textContent = confirmText;\n    confirm.addEventListener('click', () => closeConfirmModal(confirmOverlay));\n\n    confirmButtons.appendChild(cancel);\n    confirmButtons.appendChild(confirm);\n\n    confirmModal.appendChild(header);\n    confirmModal.appendChild(description);\n    confirmModal.appendChild(confirmButtons);\n\n    confirmOverlay.appendChild(confirmModal);\n\n    this.confirm = confirm;\n    this.confirmOverlay = confirmOverlay;\n  }\n}\n\nexport { ConfirmModal };\n","class TaskModal {\n  constructor(buildDatePicker, requireInput, fillProjects) {\n    const modalOverlay = document.createElement('div');\n    modalOverlay.classList.add('modal-overlay');\n\n    const form = document.createElement('form');\n    form.classList.add('create-task', 'modal');\n    form.autocomplete = 'off';\n\n    const taskName = document.createElement('input');\n    taskName.type = 'text';\n    taskName.name = 'task-name';\n    taskName.id = 'task-name';\n    taskName.placeholder = 'Task Name';\n\n    const description = document.createElement('input');\n    description.type = 'text';\n    description.name = 'description';\n    description.id = 'description';\n    description.placeholder = 'Description';\n\n    const dateTime = buildDatePicker();\n    dateTime.id = 'date-time';\n\n    const project = document.createElement('select');\n    project.name = 'project';\n    project.id = 'select-project';\n\n    const defaultOption = document.createElement('option');\n    defaultOption.value = 'default';\n    defaultOption.textContent = 'Project';\n    defaultOption.selected = true;\n\n    project.appendChild(defaultOption);\n\n    const buttons = document.createElement('div');\n    buttons.classList.add('buttons');\n\n    const cancel = document.createElement('button');\n    cancel.type = 'button';\n    cancel.id = 'cancel';\n    cancel.classList.add('cancel');\n    cancel.textContent = 'Cancel';\n\n    const submit = document.createElement('button');\n    submit.type = 'submit';\n    submit.id = 'submit';\n    submit.textContent = 'Submit';\n    submit.disabled = true;\n\n    buttons.appendChild(cancel);\n    buttons.appendChild(submit);\n\n    form.appendChild(taskName);\n    form.appendChild(description);\n    form.appendChild(dateTime);\n    form.appendChild(project);\n    form.appendChild(buttons);\n\n    modalOverlay.appendChild(form);\n\n    this.overlay = modalOverlay;\n    this.modal = form;\n    this.project = project;\n    this.submit = submit;\n    this.cancel = cancel;\n    this.requireInput = requireInput;\n    this.fillProjects = fillProjects;\n  }\n}\n\nexport { TaskModal };\n","class ProjectModal {\n  constructor(requireInput) {\n    const modalOverlay = document.createElement('div');\n    modalOverlay.classList.add('modal-overlay');\n\n    const projectModal = document.createElement('div');\n    projectModal.classList.add('new-project', 'modal');\n\n    const projectName = document.createElement('input');\n    projectName.classList.add('project-name');\n    projectName.type = 'text';\n    projectName.placeholder = 'Project Name';\n\n    const buttonsDiv = document.createElement('div');\n    buttonsDiv.classList.add('buttons');\n\n    const cancel = document.createElement('button');\n    cancel.type = 'button';\n    cancel.textContent = 'Cancel';\n    cancel.classList.add('cancel');\n\n    const submit = document.createElement('button');\n    submit.type = 'button';\n    submit.textContent = 'Submit';\n    submit.classList.add('submit');\n    submit.disabled = true;\n\n    buttonsDiv.appendChild(cancel);\n    buttonsDiv.appendChild(submit);\n\n    projectModal.appendChild(projectName);\n    projectModal.appendChild(buttonsDiv);\n\n    modalOverlay.appendChild(projectModal);\n\n    this.overlay = modalOverlay;\n    this.modal = projectModal;\n    this.cancel = cancel;\n    this.submit = submit;\n    this.requireInput = requireInput;\n  }\n}\n\nexport { ProjectModal };\n","import { ConfirmModal } from './modals/confirmModal.js';\nimport { TaskModal } from './modals/taskModal.js';\nimport { ProjectModal } from './modals/projectModal.js';\nclass ModalController {\n  #windowClick;\n  #items;\n  #alreadyOpen;\n\n  constructor(items, buildDatePicker, fillProjects) {\n    this.#items = items;\n    this.buildDatePicker = buildDatePicker;\n    this.fillProjects = fillProjects;\n  }\n\n  #modalListeners(modal) {\n    const cancel = modal.cancel;\n    const windowClick = (e) => {\n      if (\n        (!modal.modal.contains(e.target) &&\n          !e.target.classList.contains('sidebar-btn')) ||\n        e.target === cancel\n      ) {\n        this.closeModal(modal);\n      }\n    };\n\n    // Store reference to function for event listener removal\n    this.#windowClick = windowClick;\n\n    window.addEventListener('mousedown', windowClick);\n  }\n\n  requireInput() {\n    const input = this.modal.firstChild;\n\n    input.focus();\n    input.addEventListener('input', () => {\n      const validInput = /\\S+/;\n      if (input.value.match(validInput)) {\n        this.submit.disabled = false;\n      } else {\n        this.submit.disabled = true;\n      }\n    });\n  }\n\n  closeExistingModal() {\n    if (this.#alreadyOpen) {\n      this.closeModal(this.#alreadyOpen);\n    }\n  }\n\n  newTaskModal(projects, activeFilter) {\n    const form = new TaskModal(\n      this.buildDatePicker,\n      this.requireInput,\n      this.fillProjects\n    );\n\n    let filter;\n    if (activeFilter) {\n      filter = activeFilter.textContent;\n    } else {\n      filter = null;\n    }\n\n    form.fillProjects(projects, filter);\n    this.initializeModal(form);\n\n    return form;\n  }\n\n  newProjectModal(existingProject) {\n    const projectModal = new ProjectModal(this.requireInput);\n    // If this function is passed an existing project (from the edit function in app.js),\n    // set the input value to that project name\n    if (existingProject) {\n      projectModal.modal.firstChild.value = existingProject;\n      projectModal.submit.disabled = false;\n    }\n\n    this.initializeModal(projectModal);\n\n    return projectModal;\n  }\n\n  initializeModal(modal) {\n    this.#modalListeners(modal);\n    this.#items.appendChild(modal.overlay);\n    modal.requireInput();\n    this.#alreadyOpen = modal;\n  }\n\n  closeModal(modal) {\n    modal.modal.classList.add('close-modal');\n    modal.modal.addEventListener('animationend', () => {\n      this.#items.removeChild(modal.overlay);\n    });\n    window.removeEventListener('mousedown', this.#windowClick);\n    this.#alreadyOpen = null;\n  }\n\n  createCancelModal() {\n    const header = 'Discard Changes?';\n    const description = 'No changes will be saved.';\n    const confirmText = 'Discard';\n\n    const cancelModal = new ConfirmModal(\n      header,\n      description,\n      confirmText,\n      this.closeConfirmModal\n    );\n    cancelModal.confirmOverlay.classList.add('cancel-modal');\n    this.#items.appendChild(cancelModal.confirmOverlay);\n\n    return cancelModal;\n  }\n\n  createDeleteModal(projectName) {\n    const header = `Are you sure you want to delete #${projectName}?`;\n    const description = 'All tasks within this project will be deleted.';\n    const confirmText = 'Delete';\n\n    const deleteModal = new ConfirmModal(\n      header,\n      description,\n      confirmText,\n      this.closeConfirmModal\n    );\n    deleteModal.confirmOverlay.classList.add('delete-modal');\n    this.#items.appendChild(deleteModal.confirmOverlay);\n\n    return deleteModal;\n  }\n\n  createConfirmEditProject(oldProjectName, newProjectName) {\n    const header = `Are you sure you would like to change #${oldProjectName} to #${newProjectName}?`;\n    const description = 'All tasks within this project will be changed.';\n    const confirmText = 'Confirm';\n\n    const confirmEditProjectModal = new ConfirmModal(\n      header,\n      description,\n      confirmText,\n      this.closeConfirmModal\n    );\n    this.#items.appendChild(confirmEditProjectModal.confirmOverlay);\n\n    return confirmEditProjectModal;\n  }\n\n  closeConfirmModal = (overlay) => {\n    this.#items.removeChild(overlay);\n  };\n}\n\nexport { ModalController };\n","class TaskDisplayController {\n  #items;\n  #windowClick;\n\n  constructor(items, buildDatePicker) {\n    this.#items = items;\n    this.buildDatePicker = buildDatePicker;\n  }\n\n  createTaskDisplay(task) {\n    const taskDisplay = document.createElement('div');\n    taskDisplay.classList.add('task');\n\n    const checkbox = document.createElement('div');\n    checkbox.classList.add('checkbox');\n    const completedIndicator = document.createElement('div');\n    completedIndicator.classList.add('completed-indicator');\n\n    checkbox.appendChild(completedIndicator);\n\n    const taskInfo = document.createElement('div');\n    taskInfo.classList.add('task-info');\n\n    if (task.taskName) {\n      const taskName = document.createElement('p');\n      taskName.classList.add('task-name');\n      taskName.textContent = task.taskName;\n\n      taskInfo.appendChild(taskName);\n    }\n\n    if (task.description) {\n      const description = document.createElement('p');\n      description.classList.add('description', 'task-detail');\n      description.textContent = task.description;\n\n      taskInfo.appendChild(description);\n    }\n\n    if (task.dateTime) {\n      const dateAndTime = document.createElement('p');\n      dateAndTime.classList.add('date-and-time', 'task-detail');\n      dateAndTime.textContent = new Date(task.dateTime).toLocaleString(\n        'en-US',\n        {\n          day: 'numeric',\n          year: 'numeric',\n          month: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n        }\n      );\n      taskInfo.appendChild(dateAndTime);\n    }\n\n    if (task.project !== 'default') {\n      const project = document.createElement('p');\n      project.classList.add('task-project', 'task-detail');\n      project.textContent = `#${task.project}`;\n      taskInfo.appendChild(project);\n    }\n\n    const actions = document.createElement('div');\n    actions.classList.add('actions');\n    const actionButtons = {};\n\n    const editBtn = document.createElement('div');\n    editBtn.classList.add('edit');\n\n    const deleteBtn = document.createElement('div');\n    deleteBtn.classList.add('delete');\n\n    actionButtons.checkbox = checkbox;\n    actionButtons.edit = editBtn;\n    actionButtons.delete = deleteBtn;\n\n    actions.appendChild(actionButtons.edit);\n    actions.appendChild(actionButtons.delete);\n\n    taskDisplay.appendChild(checkbox);\n    taskDisplay.appendChild(taskInfo);\n    taskDisplay.appendChild(actions);\n\n    return { taskDisplay, actionButtons };\n  }\n\n  insertTaskDisplay(taskDisplay, previous) {\n    previous.parentNode.insertBefore(taskDisplay, previous);\n  }\n\n  removeTaskDisplay(taskDisplay) {\n    taskDisplay.remove();\n  }\n\n  addEditPane(task, fillProjects) {\n    const editPane = document.createElement('form');\n    editPane.classList.add('edit-pane', 'modal');\n    editPane.autocomplete = 'off';\n\n    const editName = document.createElement('input');\n    editName.type = 'text';\n    editName.name = 'task-name';\n    editName.classList.add('edit-name');\n    editName.placeholder = 'Task Name';\n    editName.value = task.taskName;\n\n    const editDescription = document.createElement('input');\n    editDescription.type = 'text';\n    editDescription.name = 'description';\n    editDescription.classList.add('edit-description');\n    editDescription.placeholder = 'Description';\n    editDescription.value = task.description;\n\n    const editDate = this.buildDatePicker();\n    editDate.classList.add('edit-date');\n    editDate.value = task.dateTime;\n\n    const editProject = document.createElement('select');\n    editProject.classList.add('edit-project');\n    editProject.name = 'project';\n\n    const defaultOption = document.createElement('option');\n    defaultOption.value = 'default';\n    defaultOption.textContent = 'Project';\n    defaultOption.selected = true;\n\n    const buttons = document.createElement('div');\n    buttons.classList.add('edit-buttons');\n\n    const cancel = document.createElement('button');\n    cancel.type = 'button';\n    cancel.id = 'cancel-edit';\n    cancel.classList.add('cancel');\n    cancel.textContent = 'Cancel';\n\n    const submit = document.createElement('button');\n    submit.type = 'submit';\n    submit.id = 'submit-edit';\n    submit.classList.add('submit');\n    submit.textContent = 'Submit';\n\n    buttons.appendChild(cancel);\n    buttons.appendChild(submit);\n\n    editProject.appendChild(defaultOption);\n\n    editPane.appendChild(editName);\n    editPane.appendChild(editDescription);\n    editPane.appendChild(editDate);\n    editPane.appendChild(editProject);\n    editPane.appendChild(buttons);\n\n    task.display.parentNode.insertBefore(editPane, task.display);\n    this.closeEditIfOutsideClick(editPane, task.display);\n\n    return {\n      modal: editPane,\n      project: editProject,\n      cancel: cancel,\n      submit: submit,\n      fillProjects: fillProjects,\n    };\n  }\n\n  removeEditPane(editPane) {\n    editPane.remove();\n  }\n\n  closeEditIfOutsideClick(editPane, taskDisplay) {\n    const callback = (e) => {\n      if (\n        !editPane.contains(e.target) &&\n        !e.target.closest('.confirm-overlay')\n      ) {\n        this.closeEdit(taskDisplay, editPane);\n      }\n    };\n\n    window.addEventListener('mousedown', callback);\n    this.#windowClick = callback;\n  }\n\n  closeEdit(taskDisplay, editPane) {\n    this.insertTaskDisplay(taskDisplay, editPane);\n    this.removeEditPane(editPane);\n\n    window.removeEventListener('mousedown', this.#windowClick);\n  }\n}\n\nexport { TaskDisplayController };\n","class TaskGroup {\n  constructor(name, tasks, activeFilter) {\n    const taskGroup = document.createElement('div');\n    taskGroup.classList.add('task-group');\n\n    const header = document.createElement('div');\n    header.classList.add('task-group-header');\n\n    const h3 = document.createElement('h3');\n    h3.textContent = name;\n\n    const dropdown = document.createElement('div');\n    dropdown.classList.add('dropdown');\n\n    const groupContainer = document.createElement('div');\n    groupContainer.classList.add('group-container');\n\n    dropdown.addEventListener('click', () => {\n      dropdown.classList.toggle('clicked');\n      groupContainer.classList.toggle('hide');\n    });\n\n    for (const task of tasks) {\n      groupContainer.appendChild(task.display);\n    }\n\n    header.appendChild(h3);\n    header.appendChild(dropdown);\n    taskGroup.appendChild(header);\n    taskGroup.appendChild(groupContainer);\n\n    this.container = taskGroup;\n    this.removeIfEmpty(this.container, groupContainer, activeFilter);\n  }\n\n  removeIfEmpty(wholeContainer, tasksContainer, activeFilter) {\n    const targetNode = tasksContainer;\n\n    const config = { childList: true };\n\n    const callback = (mutations, observer) => {\n      if (!document.body.contains(wholeContainer)) {\n        observer.disconnect();\n        return;\n      }\n\n      if (!tasksContainer.children.length) {\n        activeFilter.click();\n        observer.disconnect();\n      }\n    };\n\n    const childListObserver = new MutationObserver(callback);\n    childListObserver.observe(targetNode, config);\n  }\n}\n\nexport { TaskGroup };\n","class Task {\n  constructor(values) {\n    this.taskName = values.taskName;\n    this.description = values.description;\n    this.dateTime = values.dateTime;\n    this.project = values.project;\n  }\n}\n\nexport { Task };\n","class Project {\n  constructor(projectName) {\n    this.projectName = projectName;\n\n    this.display = document.createElement('button');\n    this.display.type = 'button';\n    this.display.classList.add('option');\n    this.display.textContent = projectName;\n\n    const actions = document.createElement('div');\n    actions.classList.add('project-actions', 'actions');\n\n    this.editBtn = document.createElement('div');\n    this.editBtn.classList.add('edit');\n\n    this.deleteBtn = document.createElement('div');\n    this.deleteBtn.classList.add('delete');\n\n    actions.appendChild(this.editBtn);\n    actions.appendChild(this.deleteBtn);\n\n    this.display.appendChild(actions);\n  }\n}\n\nexport { Project };\n","import 'normalize.css';\nimport './style.css';\nimport { DisplayController } from './display/displayController.js';\nimport { TaskManager } from './task/taskManager.js';\nimport { Project } from './project.js';\n\nconst display = new DisplayController();\nconst taskManager = new TaskManager();\n\nfunction init() {\n  display.initialize();\n  setUpButtons();\n\n  taskManager.setUpStorage();\n\n  if (taskManager.tasks.length) {\n    for (const task of taskManager.tasks) {\n      // Set up button listeners for locally retrieved tasks\n      const editDelete = task.display.querySelector('.actions').children;\n      const actionButtons = {\n        checkbox: task.display.children[0],\n        delete: editDelete[1],\n        edit: editDelete[0],\n      };\n\n      actionListeners(actionButtons, task);\n    }\n\n    display.displayTasks(taskManager.tasks);\n  }\n\n  if (taskManager.projects.length) {\n    for (const project of taskManager.projects) {\n      display.addProject(project.display);\n      projectListeners(project);\n    }\n  }\n}\n\nfunction setUpButtons() {\n  let refresher = null;\n\n  let form;\n  const newTask = document.querySelector('.add-task');\n  newTask.addEventListener('click', () => {\n    form = display.newTaskModal(taskManager.projects);\n    form.modal.scrollIntoView();\n\n    if (form) {\n      form.modal.addEventListener('submit', (e) => {\n        e.preventDefault();\n        display.closeModal(form);\n        handleFormSubmission(form.modal);\n\n        refreshOpenPage();\n      });\n    }\n  });\n\n  const search = document.querySelector('.search');\n  search.addEventListener('click', () => {\n    display.setFilter();\n    const { searchInput, datePicker } = display.createSearchInput();\n\n    const callback = (textInput, date) => {\n      const trimmed = textInput === '' ? null : textInput.trimStart();\n      let inputDate;\n\n      if (date !== '') {\n        const split = date.split('-');\n        const year = Number(split[0]);\n        const month = Number(split[1]) - 1; // because month starts at 0\n        const day = Number(split[2]);\n\n        inputDate = new Date(year, month, day);\n      } else inputDate = null;\n\n      const tasks = taskManager.getTasksByQuery(trimmed, inputDate);\n      display.displayTasks(tasks);\n    };\n\n    searchInput.addEventListener('input', () =>\n      callback(searchInput.value, datePicker.value)\n    );\n\n    datePicker.addEventListener('input', () =>\n      callback(searchInput.value, datePicker.value)\n    );\n  });\n\n  const today = document.querySelector('.today');\n  today.addEventListener('click', () => {\n    const currentDate = new Date();\n    const notOverdue = taskManager\n      .getTasksByDate(currentDate)\n      .filter((task) => new Date(task.dateTime) > currentDate); // refers to tasks that are today, but later in terms of time\n\n    refresher = handleDateFilter(currentDate, notOverdue, today, refresher);\n  });\n\n  const upcoming = document.querySelector('.upcoming');\n  upcoming.addEventListener('click', () => {\n    const currentDate = new Date();\n    const notOverdue = taskManager.getFutureTasks(currentDate);\n\n    refresher = handleDateFilter(currentDate, notOverdue, upcoming, refresher);\n  });\n\n  const allTasks = document.querySelector('.all');\n  allTasks.addEventListener('click', () => {\n    display.setFilter();\n    display.displayTasks(taskManager.tasks);\n  });\n\n  const newProject = document.querySelector('.add-project');\n  newProject.addEventListener('click', () => {\n    addProjectModal();\n  });\n}\n\nfunction refreshOpenPage() {\n  const openFilter = display.currentOpenFilter();\n  if (openFilter) {\n    openFilter.click();\n  } else {\n    returnHome();\n  }\n}\n\nfunction handleDateFilter(currentDate, notOverdue, filter, refresher) {\n  const overdueTasks = taskManager.getOverdue(currentDate);\n  const filterName = filter.textContent;\n\n  display.setFilter(filterName, filter);\n  display.displayTasks(overdueTasks.concat(notOverdue));\n\n  if (overdueTasks.length) {\n    display.formatOverdue(overdueTasks, notOverdue, filterName);\n  }\n\n  if (refresher) {\n    clearInterval(refresher);\n  }\n  refresher = refreshOverdue(notOverdue, filter);\n\n  return refresher;\n}\n\nfunction refreshOverdue(notOverdue, filter) {\n  const intervalId = setInterval(() => {\n    if (display.currentOpenFilter() === filter && notOverdue.length) {\n      for (const task of notOverdue) {\n        if (new Date(task.dateTime) < new Date()) {\n          filter.click();\n          clearInterval(intervalId);\n          return;\n        }\n      }\n    } else {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n\n  return intervalId;\n}\n\nfunction addProjectModal() {\n  const projectModal = display.newProjectModal();\n  const input = projectModal.modal.firstChild;\n\n  projectModal.modal.scrollIntoView();\n  projectModal.submit.addEventListener('click', () => {\n    display.closeModal(projectModal);\n    handleProjectSubmission(input.value);\n  });\n\n  input.addEventListener('keydown', (e) => {\n    const validInput = /\\S+/;\n    if (e.key === 'Enter' && input.value.match(validInput)) {\n      display.closeModal(projectModal);\n      handleProjectSubmission(input.value);\n    }\n  });\n}\n\nfunction handleProjectSubmission(projectName) {\n  const project = new Project(projectName);\n  display.addProject(project.display);\n  taskManager.addProject(project);\n  taskManager.refreshStorage();\n\n  projectListeners(project);\n}\n\nfunction handleFormSubmission(form) {\n  const values = getValues(form);\n\n  const task = taskManager.createTask(values);\n  const { taskDisplay, actionButtons } = display.createNewTaskDisplay(task);\n  task.display = taskDisplay;\n  taskManager.storeTask(task);\n  taskManager.refreshStorage();\n\n  actionListeners(actionButtons, task);\n}\n\nfunction getValues(formNode) {\n  const formClass = formNode.classList[0];\n  const values = {\n    taskName: formNode.querySelector(`.${formClass} [name=\"task-name\"]`).value,\n    description: formNode.querySelector(`.${formClass} [name=\"description\"]`)\n      .value,\n    dateTime: formNode.querySelector(`.${formClass} [name=\"date-and-time\"]`)\n      .value,\n    project: formNode.querySelector(`.${formClass} [name=\"project\"]`).value,\n  };\n\n  return values;\n}\n\nfunction projectListeners(project) {\n  project.deleteBtn.addEventListener('click', (e) => {\n    e.stopPropagation();\n    confirmDelete(project);\n  });\n\n  project.editBtn.addEventListener('click', (e) => {\n    e.stopPropagation();\n    editProjectModal(project);\n  });\n\n  project.display.addEventListener('click', () => {\n    filterByProject(project);\n  });\n}\n\nfunction confirmDelete(project) {\n  const deleteModal = display.confirmDelete(project.projectName);\n\n  deleteModal.confirm.addEventListener('click', () => {\n    deleteProject(project);\n  });\n}\n\nfunction deleteProject(project) {\n  const tasks = taskManager.getTasksByProject(project.projectName);\n\n  for (const task of tasks) {\n    taskManager.removeTask(task);\n    if (display.taskIsDisplayed(task.display)) {\n      display.removeTaskDisplay(task.display);\n    }\n  }\n\n  if (display.currentOpenFilter() === project.display) {\n    returnHome();\n  }\n\n  display.removeProject(project.display);\n  taskManager.removeProject(project);\n  taskManager.refreshStorage();\n}\n\nfunction returnHome() {\n  const allTasks = document.querySelector('.all');\n\n  allTasks.click();\n}\n\nfunction filterByProject(project) {\n  const tasksToDisplay = taskManager.getTasksByProject(project.projectName);\n  const projectButton = project.display;\n\n  display.setFilter(project.projectName, projectButton);\n  display.displayTasks(tasksToDisplay);\n}\n\nfunction editProjectModal(project) {\n  const projectModal = display.newProjectModal(project.projectName);\n  const input = projectModal.modal.firstChild;\n\n  const handleSubmit = () => {\n    const newProjectName = input.value;\n    if (newProjectName !== project.projectName) {\n      confirmEditProject(project, newProjectName);\n    } else {\n      display.closeModal(projectModal);\n    }\n  };\n\n  projectModal.submit.addEventListener('click', () => {\n    handleSubmit();\n  });\n\n  input.addEventListener('keydown', (e) => {\n    const validInput = /\\S+/;\n    if (e.key === 'Enter' && input.value.match(validInput)) {\n      input.blur();\n      handleSubmit();\n    }\n  });\n}\n\nfunction confirmEditProject(project, newProjectName) {\n  const confirmEditModal = display.confirmEditProject(\n    project.projectName,\n    newProjectName\n  );\n\n  confirmEditModal.confirm.addEventListener('click', () => {\n    editProject(project, newProjectName);\n  });\n}\n\nfunction editProject(project, newProjectName) {\n  const updatedProject = new Project(newProjectName);\n\n  const tasksToBeUpdated = taskManager.updateProject(project, updatedProject);\n  display.updateProject(project, updatedProject);\n  projectListeners(updatedProject);\n\n  updateTaskDisplays(tasksToBeUpdated);\n\n  taskManager.refreshStorage();\n\n  updatedProject.display.click();\n}\n\nfunction updateTaskDisplays(tasksToBeUpdated) {\n  for (const task of tasksToBeUpdated) {\n    const oldDisplay = task.display;\n    const { taskDisplay, actionButtons } = display.updateTaskOfProject(\n      task,\n      oldDisplay\n    );\n\n    task.display = taskDisplay;\n    actionListeners(actionButtons, task);\n  }\n}\n\nfunction actionListeners(actionButtons, task) {\n  actionButtons.checkbox.addEventListener('click', () => {\n    completeTask(actionButtons.checkbox, task);\n  });\n\n  actionButtons.delete.addEventListener('click', () => {\n    removeTask(task);\n  });\n\n  actionButtons.edit.addEventListener('click', () => {\n    const editPane = display.editTask(task, taskManager.projects);\n    editPaneListeners(editPane, task);\n  });\n}\n\nfunction removeTask(task) {\n  task.display.classList.add('deleted');\n  task.display.addEventListener('transitionend', () => {\n    display.removeTaskDisplay(task.display);\n    taskManager.removeTask(task);\n    taskManager.refreshStorage();\n  });\n}\n\nfunction completeTask(checkbox, task) {\n  const check = checkbox.children[0];\n  check.classList.add('completed');\n\n  check.addEventListener('animationend', () => {\n    removeTask(task);\n  });\n}\n\nfunction editPaneListeners(editPane, task) {\n  const cancel = editPane.cancel;\n\n  cancel.addEventListener('click', () => {\n    cancelEdit(editPane, task);\n  });\n\n  editPane.modal.addEventListener('submit', (e) => {\n    e.preventDefault();\n    submitEdit(editPane, task);\n\n    refreshOpenPage();\n  });\n}\n\nfunction cancelEdit(editPane, task) {\n  const current = getValues(editPane.modal);\n\n  if (valuesChanged(current, task)) {\n    const cancelModal = display.confirmCancel();\n\n    cancelModal.confirm.addEventListener('click', () => {\n      display.closeEdit(task.display, editPane.modal);\n    });\n  } else {\n    display.closeEdit(task.display, editPane.modal);\n  }\n}\n\nfunction submitEdit(editPane, task) {\n  const newValues = getValues(editPane.modal);\n\n  if (valuesChanged(newValues, task)) {\n    task = taskManager.updateTask(task, newValues);\n\n    const { taskDisplay, actionButtons } = display.createNewTaskDisplay(task);\n    display.closeEdit(taskDisplay, editPane.modal);\n    task.display = taskDisplay;\n\n    taskManager.refreshStorage();\n    actionListeners(actionButtons, task);\n  } else display.closeEdit(task.display, editPane.modal);\n}\n\nfunction valuesChanged(current, task) {\n  if (\n    current.taskName !== task.taskName ||\n    current.description !== task.description ||\n    current.dateTime !== task.dateTime ||\n    current.project !== task.project\n  ) {\n    return true;\n  } else return false;\n}\n\ninit();\n","import { SidebarController } from './sidebarController.js';\nimport { ModalController } from './modalController.js';\nimport { TaskDisplayController } from './taskDisplay.js';\nimport { TaskGroup } from './taskGroup.js';\n\nclass DisplayController {\n  #itemsWrapper = document.querySelector('.items-wrapper');\n  #items = document.querySelector('.items');\n  #content = document.querySelector('#content');\n  #activeFilter;\n\n  constructor() {\n    this.sidebarController = new SidebarController(this.#content);\n    this.modalController = new ModalController(\n      this.#items,\n      this.buildDatePicker,\n      this.fillProjects\n    );\n    this.taskDisplayController = new TaskDisplayController(\n      this.#items,\n      this.buildDatePicker\n    );\n  }\n\n  initialize() {\n    this.sidebarController.initialize();\n  }\n\n  getCurrentDateTime() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n\n  // These two methods must be arrow functions to prevent \"this\" from being lost in\n  // the two classes that receive them\n  onInvalidDate = (e) => {\n    const datePicker = e.currentTarget;\n    const enteredDate = new Date(datePicker.value);\n    const currentDate = new Date();\n    if (datePicker.value) {\n      if (enteredDate < currentDate) {\n        datePicker.setCustomValidity(\n          `Please enter date and time after ${currentDate.toLocaleString(\n            'en-US',\n            {\n              month: 'numeric',\n              day: 'numeric',\n              year: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit',\n            }\n          )}.`\n        );\n      }\n    } else {\n      datePicker.setCustomValidity('Please enter date and time.');\n    }\n  };\n\n  onValidDate(e) {\n    e.currentTarget.setCustomValidity('');\n  }\n\n  buildDatePicker = () => {\n    const dateTime = document.createElement('input');\n    dateTime.type = 'datetime-local';\n    dateTime.name = 'date-and-time';\n    dateTime.min = this.getCurrentDateTime();\n    dateTime.max = '9999-12-31T23:59';\n    dateTime.oninvalid = this.onInvalidDate;\n    dateTime.oninput = this.onValidDate;\n\n    return dateTime;\n  };\n\n  createSearchInput() {\n    const container = document.createElement('div');\n    container.classList.add('search-container');\n\n    const searchInput = document.createElement('input');\n    searchInput.classList.add('search-input');\n    searchInput.placeholder = 'Search by task name ....';\n\n    const datePicker = document.createElement('input');\n    datePicker.type = 'date';\n    datePicker.max = '9999-12-31';\n\n    container.append(searchInput, datePicker);\n    this.#itemsWrapper.prepend(container);\n\n    return { searchInput, datePicker };\n  }\n\n  fillProjects(projects, activeProject) {\n    const modal = this;\n    projects.forEach((project) => {\n      const newOption = document.createElement('option');\n      newOption.textContent = project.projectName;\n      newOption.value = project.projectName;\n\n      if (activeProject && activeProject === project.projectName) {\n        newOption.selected = true;\n      }\n\n      modal.project.appendChild(newOption);\n    });\n  }\n\n  newTaskModal(projects) {\n    this.modalController.closeExistingModal();\n    const form = this.modalController.newTaskModal(\n      projects,\n      this.#activeFilter\n    );\n    return form;\n  }\n\n  newProjectModal(existingProject = null) {\n    this.modalController.closeExistingModal();\n\n    const projectModal = this.modalController.newProjectModal(existingProject);\n\n    return projectModal;\n  }\n\n  closeModal(modal) {\n    this.modalController.closeModal(modal);\n  }\n\n  addProject(projectDisplay) {\n    this.sidebarController.addProject(projectDisplay);\n  }\n\n  removeProject(projectDisplay) {\n    this.sidebarController.removeProject(projectDisplay);\n  }\n\n  createNewTaskDisplay(task) {\n    const { taskDisplay, actionButtons } =\n      this.taskDisplayController.createTaskDisplay(task);\n\n    return { taskDisplay, actionButtons };\n  }\n\n  removeTaskDisplay(taskDisplay) {\n    this.taskDisplayController.removeTaskDisplay(taskDisplay);\n  }\n\n  editTask(task, projects) {\n    const editPane = this.taskDisplayController.addEditPane(\n      task,\n      this.fillProjects\n    );\n    editPane.fillProjects(projects, task.project);\n    this.taskDisplayController.removeTaskDisplay(task.display);\n\n    return editPane;\n  }\n\n  taskIsDisplayed(taskDisplay) {\n    if (this.#items.contains(taskDisplay)) return true;\n    else return false;\n  }\n\n  currentOpenFilter() {\n    return this.#activeFilter;\n  }\n\n  closeEdit(taskDisplay, editPane) {\n    this.taskDisplayController.closeEdit(taskDisplay, editPane);\n  }\n\n  confirmCancel() {\n    const cancelModal = this.modalController.createCancelModal();\n\n    return cancelModal;\n  }\n\n  confirmDelete(projectName) {\n    const deleteModal = this.modalController.createDeleteModal(projectName);\n\n    return deleteModal;\n  }\n\n  confirmEditProject(oldProjectName, newProjectName) {\n    const confirmEditProjectModal =\n      this.modalController.createConfirmEditProject(\n        oldProjectName,\n        newProjectName\n      );\n\n    return confirmEditProjectModal;\n  }\n\n  updateProject(project, updatedProject) {\n    this.sidebarController.updateProject(project, updatedProject);\n  }\n\n  updateTaskOfProject(task, oldDisplay) {\n    const { taskDisplay, actionButtons } =\n      this.taskDisplayController.createTaskDisplay(task);\n\n    this.taskDisplayController.insertTaskDisplay(taskDisplay, oldDisplay);\n    this.taskDisplayController.removeTaskDisplay(oldDisplay);\n\n    return { taskDisplay, actionButtons };\n  }\n\n  clearTasks() {\n    this.#items.innerHTML = '';\n  }\n\n  displayTasks(tasksToDisplay) {\n    this.clearTasks();\n    for (const task of tasksToDisplay) {\n      this.#items.appendChild(task.display);\n    }\n  }\n\n  setFilter(filterName = null, activeFilterButton = null) {\n    // If nothing is passed, the active filter is simply removed\n    this.clearTasks();\n    const firstChild = this.#itemsWrapper.children[0];\n    if (\n      firstChild.classList.contains('project-header') ||\n      firstChild.classList.contains('search-container')\n    ) {\n      firstChild.remove();\n    }\n\n    if (filterName) {\n      const header = document.createElement('h1');\n      header.classList.add('project-header');\n      header.textContent = `${filterName}`;\n      this.#itemsWrapper.prepend(header);\n\n      this.#activeFilter = activeFilterButton;\n    } else {\n      this.#activeFilter = null;\n    }\n  }\n\n  formatOverdue(overdue, notOverdue, filterName) {\n    if (overdue.length) {\n      const overdueGroup = new TaskGroup(\n        'Overdue',\n        overdue,\n        this.#activeFilter\n      );\n      this.#items.prepend(overdueGroup.container);\n    }\n\n    if (notOverdue.length) {\n      const notOverdueGroup = new TaskGroup(\n        filterName,\n        notOverdue,\n        this.#activeFilter\n      );\n      this.#items.appendChild(notOverdueGroup.container);\n    }\n  }\n}\n\nexport { DisplayController };\n","import { Task } from './task.js';\nimport { toDOM, toJSON } from 'dom-to-json';\nclass TaskManager {\n  #tasks = [];\n  #projects = [];\n\n  createTask(values) {\n    const task = new Task(values);\n\n    return task;\n  }\n\n  storeTask(task) {\n    const found = this.#tasks.findIndex(\n      (existing) =>\n        !existing.dateTime ||\n        new Date(existing.dateTime) > new Date(task.dateTime)\n    );\n    if (this.#tasks.length && task.dateTime && found !== -1)\n      this.#tasks.splice(found, 0, task);\n    else this.#tasks.push(task);\n  }\n\n  updateTask(task, values) {\n    const index = this.#tasks.indexOf(task);\n    this.#tasks.splice(index, 1);\n\n    const newTask = this.createTask(values);\n    this.storeTask(newTask);\n\n    return newTask;\n  }\n\n  removeTask(task) {\n    const index = this.#tasks.indexOf(task);\n    this.#tasks.splice(index, 1);\n  }\n\n  addProject(project) {\n    this.#projects.push(project);\n  }\n\n  removeProject(project) {\n    const index = this.#projects.indexOf(project);\n\n    this.#projects.splice(index, 1);\n  }\n\n  getTasksByProject(project) {\n    return this.#tasks.filter((task) => task.project === project);\n  }\n\n  getOverdue(date) {\n    return this.#tasks.filter((task) => {\n      const taskDate = new Date(task.dateTime);\n\n      return taskDate < date;\n    });\n  }\n\n  compareDatesWithoutTime(first, second) {\n    return (\n      `${first.getMonth()}-${first.getDate()}-${first.getFullYear()}` ===\n      `${second.getMonth()}-${second.getDate()}-${second.getFullYear()}`\n    );\n  }\n\n  getTasksByDate(date) {\n    return this.#tasks.filter((task) => {\n      const taskDate = new Date(task.dateTime);\n\n      return this.compareDatesWithoutTime(taskDate, date);\n    });\n  }\n\n  getTasksByName(taskName) {\n    return this.#tasks.filter((task) =>\n      task.taskName.toUpperCase().includes(taskName.toUpperCase())\n    );\n  }\n\n  getFutureTasks(date) {\n    return this.#tasks.filter((task) => {\n      const taskDate = new Date(task.dateTime);\n\n      return taskDate > date;\n    });\n  }\n\n  getTasksByQuery(taskName, date) {\n    if (taskName && !date) {\n      return this.getTasksByName(taskName);\n    } else if (date && !taskName) {\n      return this.getTasksByDate(date);\n    } else if (taskName && date) {\n      return this.#tasks.filter(\n        (task) =>\n          task.taskName.toUpperCase().includes(taskName.toUpperCase()) &&\n          this.compareDatesWithoutTime(new Date(task.dateTime), date)\n      );\n    } else {\n      return [];\n    }\n  }\n\n  updateProject(oldProject, updatedProject) {\n    const tasksToBeUpdated = this.getTasksByProject(oldProject.projectName);\n\n    for (const task of tasksToBeUpdated) {\n      task.project = updatedProject.projectName;\n    }\n\n    const index = this.#projects.indexOf(oldProject);\n    this.#projects.splice(index, 1, updatedProject);\n\n    return tasksToBeUpdated;\n  }\n\n  storeTasks() {\n    let taskNames = [];\n    this.#tasks.forEach((task) => {\n      taskNames.push(task.taskName);\n      task.JSONdisplay = toJSON(task.display);\n      localStorage.setItem(`${task.taskName}`, JSON.stringify(task));\n    });\n    localStorage.setItem('taskNames', JSON.stringify(taskNames));\n  }\n\n  storeProjects() {\n    let projectNames = [];\n    this.#projects.forEach((project) => {\n      // Do not store the button as active if it is currently clicked when the user exits the screen\n      project.display.classList.remove('clicked');\n\n      project.JSONdisplay = toJSON(project.display);\n      project.JSONeditBtn = toJSON(project.editBtn);\n      project.JSONdeleteBtn = toJSON(project.deleteBtn);\n      projectNames.push(project.projectName);\n      localStorage.setItem(`#${project.projectName}`, JSON.stringify(project));\n    });\n    localStorage.setItem('projectNames', JSON.stringify(projectNames));\n  }\n\n  refreshStorage() {\n    localStorage.clear();\n    this.storeTasks();\n    this.storeProjects();\n  }\n\n  retrieveTasks() {\n    if (localStorage.getItem('taskNames')) {\n      const taskNames = JSON.parse(localStorage.getItem('taskNames'));\n\n      if (taskNames.length) {\n        for (const taskName of taskNames) {\n          const task = JSON.parse(localStorage.getItem(`${taskName}`));\n          task.display = toDOM(task.JSONdisplay);\n          this.#tasks.push(task);\n        }\n      }\n    }\n  }\n\n  retrieveProjects() {\n    if (localStorage.getItem('projectNames')) {\n      const projectNames = JSON.parse(localStorage.getItem('projectNames'));\n\n      if (projectNames.length) {\n        for (const projectName of projectNames) {\n          const project = JSON.parse(localStorage.getItem(`#${projectName}`));\n          project.display = toDOM(project.JSONdisplay);\n          project.JSONeditBtn = project.display.querySelector('.edit');\n          project.JSONdeleteBtn = project.display.querySelector('.delete');\n          this.#projects.push(project);\n        }\n      }\n    }\n  }\n\n  setUpStorage() {\n    this.retrieveTasks();\n    this.retrieveProjects();\n  }\n\n  get projects() {\n    return this.#projects;\n  }\n\n  get tasks() {\n    return this.#tasks;\n  }\n}\n\nexport { TaskManager };\n"],"names":["toJSON","exports","node","obj","nodeType","undefined","tagName","toLowerCase","nodeName","nodeValue","length","arr","attrs","attributes","childNodes","Array","i","attr","toDOM","JSON","parse","document","createElement","len","setAttribute","createTextNode","createComment","implementation","createDocument","createDocumentType","createDocumentFragment","appendChild","__webpack_module_cache__","SidebarController","querySelector","from","querySelectorAll","constructor","content","this","window","innerWidth","classList","contains","overlay","btnPress","toggle","add","remove","addEventListener","once","toggleSidebarWithOverlay","toggleSidebarWithoutOverlay","insertBefore","firstChild","removeChild","e","target","closest","toggledOff","setTimeout","clearTimeout","setUpListeners","stopPropagation","option","setUpOptionBtn","existing","find","btn","initialize","addProject","projectDisplay","push","removeProject","index","indexOf","splice","updateProject","project","updatedProject","display","ConfirmModal","headerText","descText","confirmText","closeConfirmModal","confirmOverlay","confirmModal","header","textContent","description","confirmButtons","cancel","type","confirm","TaskModal","buildDatePicker","requireInput","fillProjects","modalOverlay","form","autocomplete","taskName","name","id","placeholder","dateTime","defaultOption","value","selected","buttons","submit","disabled","modal","ProjectModal","projectModal","projectName","buttonsDiv","ModalController","items","windowClick","closeModal","input","focus","match","closeExistingModal","newTaskModal","projects","activeFilter","filter","initializeModal","newProjectModal","existingProject","removeEventListener","createCancelModal","cancelModal","createDeleteModal","deleteModal","createConfirmEditProject","oldProjectName","newProjectName","confirmEditProjectModal","TaskDisplayController","createTaskDisplay","task","taskDisplay","checkbox","completedIndicator","taskInfo","dateAndTime","Date","toLocaleString","day","year","month","hour","minute","actions","actionButtons","editBtn","deleteBtn","edit","delete","insertTaskDisplay","previous","parentNode","removeTaskDisplay","addEditPane","editPane","editName","editDescription","editDate","editProject","closeEditIfOutsideClick","removeEditPane","callback","closeEdit","TaskGroup","tasks","taskGroup","h3","dropdown","groupContainer","container","removeIfEmpty","wholeContainer","tasksContainer","targetNode","MutationObserver","mutations","observer","body","children","click","disconnect","observe","childList","Task","values","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","Project","sidebarController","modalController","taskDisplayController","getCurrentDateTime","now","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","onInvalidDate","datePicker","currentTarget","enteredDate","currentDate","setCustomValidity","onValidDate","min","max","oninvalid","oninput","createSearchInput","searchInput","append","prepend","activeProject","forEach","newOption","createNewTaskDisplay","editTask","taskIsDisplayed","currentOpenFilter","confirmCancel","confirmDelete","confirmEditProject","updateTaskOfProject","oldDisplay","clearTasks","innerHTML","displayTasks","tasksToDisplay","setFilter","filterName","activeFilterButton","formatOverdue","overdue","notOverdue","overdueGroup","notOverdueGroup","taskManager","createTask","storeTask","found","findIndex","updateTask","newTask","removeTask","getTasksByProject","getOverdue","date","compareDatesWithoutTime","first","second","getTasksByDate","taskDate","getTasksByName","toUpperCase","includes","getFutureTasks","getTasksByQuery","oldProject","tasksToBeUpdated","storeTasks","taskNames","JSONdisplay","localStorage","setItem","stringify","storeProjects","projectNames","JSONeditBtn","JSONdeleteBtn","refreshStorage","clear","retrieveTasks","getItem","retrieveProjects","setUpStorage","refreshOpenPage","openFilter","returnHome","handleDateFilter","refresher","overdueTasks","concat","clearInterval","intervalId","setInterval","refreshOverdue","handleProjectSubmission","projectListeners","getValues","formNode","formClass","deleteProject","handleSubmit","actionListeners","updateTaskDisplays","key","blur","editProjectModal","projectButton","filterByProject","check","completeTask","valuesChanged","cancelEdit","preventDefault","newValues","submitEdit","editPaneListeners","current","scrollIntoView","handleFormSubmission","textInput","trimmed","trimStart","inputDate","split","Number","today","upcoming","addProjectModal","setUpButtons","editDelete","init"],"sourceRoot":""}